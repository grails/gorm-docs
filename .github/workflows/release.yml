name: Release
on:
  push:
    branches:
      - master
      - '[7-9]+.[0-9]+.x'
  workflow_dispatch:
    inputs:
      gorm_version:
        description: 'Gorm Version (eg: 7.0.8)'
        required: true
jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8']
    env:
      BETA: ${{ contains(github.event.inputs.gorm_version, 'M') || contains(github.event.inputs.gorm_version, 'RC') }}
      GIT_USER_NAME: puneetbehl
      GIT_USER_EMAIL: behlp@objectcomputing.com
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Extract branch name
        if: success() && github.event_name == 'workflow_dispatch'
        id: extract_branch
        run: echo ::set-output name=value::${GITHUB_REF:11}
      - name: Asset Path
        if: success() && github.event_name == 'workflow_dispatch'
        id: asset_path
        uses: haya14busa/action-cond@v1
        with:
          cond: ${{ env.BETA == '' || env.BETA == 'false' }}
          if_true: ${{ env.PATH_PREFIX }}-${{ github.event.inputs.gorm_version }}.RELEASE.zip
          if_false: ${{ env.PATH_PREFIX }}-${{ github.event.inputs.gorm_version }}.zip
        env:
          PATH_PREFIX: "./build/distributions/gorm-docs"
      - name: Tag and Release Docs
        uses: ./.github/actions/tag-and-release
        if: success() && github.event_name == 'workflow_dispatch'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          gorm_version: ${{ github.event.inputs.gorm_version }}
        env:
          TARGET_BRANCH: ${{ steps.extract_branch.outputs.value }}
      - name: Create Release
        if: success() && github.event_name == 'workflow_dispatch'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.gorm_version }}
          release_name: Release ${{ github.event.inputs.gorm_version }}
          draft: false
          prerelease: ${{ env.BETA }}
      - name: Publish Documentation
        run: |
          ./gradlew --stop
          (set -x; ./gradlew asciidoctor --no-daemon)
          (set -x; ./gradlew groovydoc --no-daemon)
          (set -x; ./gradlew docs --no-daemon)
          (set -x; ./gradlew assemble --no-daemon)
      - name: Upload Release Asset
        if: success() && github.event_name == 'workflow_dispatch'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.asset_path.outputs.value }}
          asset_name: gorm-docs.zip
          asset_content_type: application/zip
      - name: Determine docs target repository
        if: success()
        uses: haya14busa/action-cond@v1
        id: docs_target
        with:
          cond: ${{ github.repository == 'grails/gorm-docs' }}
          if_true: 'grails/grails-data-mapping'
          if_false: ${{ github.repository }}
      - name: Publish to Github Pages
        if: success()
        uses: micronaut-projects/github-pages-deploy-action@master
        env:
          TARGET_REPOSITORY: ${{ steps.docs_target.outputs.value }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: build/docs
          VERSION: ${{ github.event.inputs.gorm_version }}
          DOC_FOLDER: gh-pages
          COMMIT_EMAIL: ${{ env.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ env.GIT_USER_NAME }}
